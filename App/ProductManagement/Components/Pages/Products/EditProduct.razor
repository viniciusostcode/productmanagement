@page "/editproduct/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using ProductManagement.Data
@inject ApplicationDbContext Context;
@inject NavigationManager Navigation;
@rendermode InteractiveServer
@using ProductManagement.Data.Models
@attribute [Authorize]

<h1>Editing product</h1>

<br />

@if (Model == null)
{
    <p>Product not found</p>
} else
{
    <h4>Product name: @Model.Product, ID: @Model.Id</h4>
    <br />

    <EditForm Model="@Model" OnValidSubmit="OnValidSubmit" FormName="editForm">

        <div class="mb-3">


            <DataAnnotationsValidator />
            <ValidationSummary />

            <label class="form-label fw-bold">Name</label>
            <InputText @bind-Value="Model.Product" class="form-control mb-3" />
            <ValidationMessage For="(()=> Model.Product)" />

            <label class="form-label fw-bold">Situation</label>
            <InputSelect @bind-Value="Model.Situation" class="form-control mb-3">
                <option value="Sold">Sold</option>
                <option value="Purchased">Purchased</option>
            </InputSelect>
            <ValidationMessage For="(()=> Model.Situation)" />

            <label class="form-label fw-bold">Quantity</label>
            <InputNumber @bind-Value="Model.Quantity" class="form-control mb-3" />
            <ValidationMessage For="(()=> Model.Quantity)" />

            <label class="form-label fw-bold">Currency Code</label>
            <InputSelect @bind-Value="Model.CurrencyCode" class="form-control mb-3">
                <option value="BRL">Brazillian Real</option>
                <option value="USD">Dollar</option>
            </InputSelect>
            <ValidationMessage For="(()=> Model.CurrencyCode)" />

            <label class="form-label fw-bold">Price</label>
            <InputNumber @bind-Value="Model.Price" class="form-control mb-3" />
            <ValidationMessage For="(()=> Model.Price)" />

        </div>

        <button type="submit" class="btn btn-primary">Update</button>
        <button type="button" class="btn btn-danger" href="/products">Cancel</button>


    </EditForm>

}

@code {

    [Parameter]
    public int Id { get; set; }

    public ProductModel? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = Context.Products.FirstOrDefault(x => x.Id == Id);
    }

    public async Task OnValidSubmit()
    {
        Context.Update(Model);
        Context.SaveChanges();
        Navigation.NavigateTo("/");
    }

}
